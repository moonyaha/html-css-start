{"version":3,"file":"main.css","sources":["main.scss","_fonts.scss","_variables.scss","mixins/_font-face.scss","_helpers.scss","_base.scss","functions/_size.scss","mixins/_font-size.scss"],"sourcesContent":["@import \"fonts\";\r\n@import \"helpers\";\r\n@import \"base\";","@import \"variables\";\r\n@import \"mixins/font-face\";\r\n\r\n\r\n@include font-face(Roboto, \"../fonts/Roboto/Roboto-Regular\", 400, normal);","$maxWidth: 1270;\r\n$minWidth: 320;","@function str-replace($string, $search, $replace: \"\") {\r\n    $index: str-index($string, $search);\r\n\r\n    @if $index {\r\n        @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);\r\n    }\r\n\r\n    @return $string;\r\n}\r\n\r\n\r\n@mixin font-face($name, $path, $weight: null, $style: null, $exts: woff2 woff) {\r\n    $src: null;\r\n\r\n    $extmods: (eot: \"?\", svg: \"#\" + str-replace($name, \" \", \"_\"));\r\n\r\n    $formats: (otf: \"opentype\", ttf: \"truetype\");\r\n\r\n    @each $ext in $exts {\r\n        $extmod: if(map-has-key($extmods, $ext), $ext + map-get($extmods, $ext), $ext);\r\n        $format: if(map-has-key($formats, $ext), map-get($formats, $ext), $ext);\r\n        $src: append($src, url(quote($path + \".\" + $extmod)) format(quote($format)), comma);\r\n    }\r\n\r\n    @font-face {\r\n        font-family: quote($name);\r\n        font-style: $style;\r\n        font-weight: $weight;\r\n        font-display: swap;\r\n        src: $src;\r\n    }\r\n}\r\n",".invisible {\r\n    border: 0;\r\n    clip: rect(0 0 0 0);\r\n    height: 1px;\r\n    margin: -1px;\r\n    overflow: hidden;\r\n    padding: 0;\r\n    position: absolute;\r\n    width: 1px;\r\n}\r\n\r\n\r\n.list-clear {\r\n    padding: 0;\r\n    margin: 0;\r\n    list-style-type: none;\r\n}\r\n\r\n\r\n.btn-clear {\r\n    border: 0;\r\n    background: none;\r\n    padding: 0;\r\n}\r\n\r\n\r\n.clip {\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n}","@import \"functions/size\";\r\n@import \"mixins/font-size\";\r\n@import \"variables\";\r\n\r\n\r\nbody {\r\n    min-height: 100vh;\r\n    min-width: $minWidth + px;\r\n    display: flex;\r\n    flex-direction: column;\r\n}\r\n","@function vw($px) {\r\n    @return $px / 1920 * 100 + vw;\r\n}\r\n\r\n\r\n@function vh($px) {\r\n    @return $px / 1080 * 100 + vh;\r\n}\r\n\r\n\r\n@function rem($px) {\r\n    @return $px / 16 + rem;\r\n}\r\n\r\n\r\n@function em($px) {\r\n    @return $px / 16 + em;\r\n}\r\n","@import \"../variables\";\r\n\r\n\r\n@mixin rubberFont($pcSize, $mobSize) {\r\n    $addSize: $pcSize - $mobSize;\r\n    $diffMaxWidth: $maxWidth - 320;\r\n\r\n    font-size: calc(#{$mobSize + px} + #{$addSize} * ((100vw - 320px) / #{$diffMaxWidth}));\r\n\r\n    @media (min-width: $maxWidth + px) {\r\n        font-size: $pcSize + px;\r\n    }\r\n\r\n    @media (max-width: $minWidth + px) {\r\n        font-size: $mobSize + px;\r\n    }\r\n}\r\n"],"names":[],"mappings":"AGwBI,UAAU;EACN,WAAW,EAAE,QAAY;EACzB,UAAU,EFtBgD,MAAM;EEuBhE,WAAW,EFvB0C,GAAG;EEwBxD,YAAY,EAAE,IAAI;EAClB,GAAG,EARgB,2CAAiC,CAAC,eAAsB,EAAxD,0CAAiC,CAAC,cAAsB;;;ACrBnF,AAAA,UAAU,CAAC;EACP,MAAM,EAAE,CAAC;EACT,IAAI,EAAE,aAAa;EACnB,MAAM,EAAE,GAAG;EACX,MAAM,EAAE,IAAI;EACZ,QAAQ,EAAE,MAAM;EAChB,OAAO,EAAE,CAAC;EACV,QAAQ,EAAE,QAAQ;EAClB,KAAK,EAAE,GAAG;CACb;;AAGD,AAAA,WAAW,CAAC;EACR,OAAO,EAAE,CAAC;EACV,MAAM,EAAE,CAAC;EACT,eAAe,EAAE,IAAI;CACxB;;AAGD,AAAA,UAAU,CAAC;EACP,MAAM,EAAE,CAAC;EACT,UAAU,EAAE,IAAI;EAChB,OAAO,EAAE,CAAC;CACb;;AAGD,AAAA,KAAK,CAAC;EACF,WAAW,EAAE,MAAM;EACnB,QAAQ,EAAE,MAAM;EAChB,aAAa,EAAE,QAAQ;CAC1B;;ACzBD,AAAA,IAAI,CAAC;EACD,UAAU,EAAE,KAAK;EACjB,SAAS,EAAE,KAAc;EACzB,OAAO,EAAE,IAAI;EACb,cAAc,EAAE,MAAM;CACzB"}