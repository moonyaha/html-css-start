{"version":3,"file":"fonts.css","sources":["fonts.scss","vendors/_variables.scss","vendors/_mixins.sass"],"sourcesContent":["@import \"vendors/variables\";\r\n@import \"vendors/mixins\";\r\n\r\n/* Roboto */\r\n@each $name, $weight in $fontList {\r\n    @include font-face(Roboto, '../fonts/Roboto/Roboto-#{$name}', $weight, normal);\r\n}","$fontSizeList: (2, 10, 12, 14, 16, 18, 20, 22, 26);\r\n\r\n$colorList:    (\r\n                       red: #dc3545,\r\n               );\r\n\r\n$fontList:     (\r\n                       Black: 900,\r\n                       Bold: 700,\r\n                       Medium: 500,\r\n                       Regular: 400,\r\n                       Light: 300\r\n               );","// =============================================================================\n// String Replace\n// =============================================================================\n\n@function str-replace($string, $search, $replace: \"\") {\n    $index: str-index($string, $search);\n\n    @if $index {\n        @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace); }\n\n    @return $string; }\n\n\n// =============================================================================\n// Font Face\n// =============================================================================\n\n@mixin font-face($name, $path, $weight: null, $style: null, $exts: eot woff2 woff ttf svg) {\n    $src: null;\n\n    $extmods: (eot: \"?\", svg: \"#\" + str-replace($name, \" \", \"_\"));\n\n    $formats: (otf: \"opentype\", ttf: \"truetype\");\n\n    @each $ext in $exts {\n        $extmod: if(map-has-key($extmods, $ext), $ext + map-get($extmods, $ext), $ext);\n        $format: if(map-has-key($formats, $ext), map-get($formats, $ext), $ext);\n        $src: append($src, url(quote($path + \".\" + $extmod)) format(quote($format)), comma); }\n\n\n    @font-face {\n        font-family: quote($name);\n        font-style: $style;\n        font-weight: $weight;\n        font-display: swap;\n        src: $src; } }\n\n"],"names":[],"mappings":"AAGA,YAAY;AE2BR,UAAU;EACN,WAAW,EAAE,QAAY;EACzB,UAAU,EF3ByD,MAAM;EE4BzE,WAAW,ED1BW,GAAG;EC2BzB,YAAY,EAAE,IAAI;EAClB,GAAG,EARgB,wCAAiC,CAAC,aAAsB,EAAxD,yCAAiC,CAAC,eAAsB,EAAxD,wCAAiC,CAAC,cAAsB,EAAxD,uCAAiC,CAAC,kBAAsB,EAAxD,8CAAiC,CAAC,aAAsB;;;AAG/E,UAAU;EACN,WAAW,EAAE,QAAY;EACzB,UAAU,EF3ByD,MAAM;EE4BzE,WAAW,EDzBU,GAAG;EC0BxB,YAAY,EAAE,IAAI;EAClB,GAAG,EARgB,uCAAiC,CAAC,aAAsB,EAAxD,wCAAiC,CAAC,eAAsB,EAAxD,uCAAiC,CAAC,cAAsB,EAAxD,sCAAiC,CAAC,kBAAsB,EAAxD,6CAAiC,CAAC,aAAsB;;;AAG/E,UAAU;EACN,WAAW,EAAE,QAAY;EACzB,UAAU,EF3ByD,MAAM;EE4BzE,WAAW,EDxBY,GAAG;ECyB1B,YAAY,EAAE,IAAI;EAClB,GAAG,EARgB,yCAAiC,CAAC,aAAsB,EAAxD,0CAAiC,CAAC,eAAsB,EAAxD,yCAAiC,CAAC,cAAsB,EAAxD,wCAAiC,CAAC,kBAAsB,EAAxD,+CAAiC,CAAC,aAAsB;;;AAG/E,UAAU;EACN,WAAW,EAAE,QAAY;EACzB,UAAU,EF3ByD,MAAM;EE4BzE,WAAW,EDvBa,GAAG;ECwB3B,YAAY,EAAE,IAAI;EAClB,GAAG,EARgB,0CAAiC,CAAC,aAAsB,EAAxD,2CAAiC,CAAC,eAAsB,EAAxD,0CAAiC,CAAC,cAAsB,EAAxD,yCAAiC,CAAC,kBAAsB,EAAxD,gDAAiC,CAAC,aAAsB;;;AAG/E,UAAU;EACN,WAAW,EAAE,QAAY;EACzB,UAAU,EF3ByD,MAAM;EE4BzE,WAAW,EDtBW,GAAG;ECuBzB,YAAY,EAAE,IAAI;EAClB,GAAG,EARgB,wCAAiC,CAAC,aAAsB,EAAxD,yCAAiC,CAAC,eAAsB,EAAxD,wCAAiC,CAAC,cAAsB,EAAxD,uCAAiC,CAAC,kBAAsB,EAAxD,8CAAiC,CAAC,aAAsB"}